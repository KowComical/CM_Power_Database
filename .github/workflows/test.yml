name: all_workflow
'on':
  schedule:
    - cron: '0 22 * * *'
  workflow_dispatch: # 添加一个可以手动运行的按钮
jobs:
  craw_process_bot:
    runs-on: ubuntu-latest
    steps:
      - name: check_code
        uses: actions/checkout@master
      - name: set up Python 3.8
        uses: actions/setup-Python@v2
        with:
          python-version: '3.8'
      - name: install requirements
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install requests
          pip install matplotlib
          pip install jsonpath
          pip install requests_toolbelt
          pip install bs4
          pip install pdfplumber
          pip install lxml
          pip install pillow
          pip install Image
          pip install openpyxl
          pip install sklearn
          pip install skforecast
          pip install selenium
          pip install webdriver-manager
          pip install seaborn
          pip install pyautogui
          pip install jupyterthemes
      - name: process data
        run: python ./code/global_code/all_process.py
      - name: commit and push if it changed
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "Last updated on: ${timestamp}" || exit 0
          git push
  push_to_public: # 把清理好的数据push到公共库
    needs: craw_process_bot
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Pushes test file
      uses: dmnemec/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source_file: 'data/global/Global_PM_corT.csv'
        destination_repo: 'KowComical/CM_Power_Data'
        user_email: 'xuanren1992@yahoo.com'
        user_name: 'KowComical'
        commit_message: 'Daily Power Generation data Updated from CM_Power_Database'
  push_to_CM:
    needs: craw_process_bot
    runs-on: windows-latest
    steps:
      - name: check_code
        uses: actions/checkout@master
      - name: set up Python 3.8
        uses: actions/setup-Python@v2
        with:
          python-version: '3.8'
      - name: install requirements
        run: |
          python -m pip install --upgrade pip
          pip install pandas
          pip install selenium
          pip install webdriver-manager
          pip install pyautogui
      - name: process data
        run: python ./code/global_code/auto_upload.py
